version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: safe-whisper-db-prod
    environment:
      POSTGRES_DB: ${DB_NAME:-safe_whisper}
      POSTGRES_USER: ${DB_USER:-safe_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-$(openssl rand -base64 32)}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    networks:
      - safe-whisper-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-safe_user} -d ${DB_NAME:-safe_whisper}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Backend Application (from Docker Hub)
  backend:
    image: sousavfl/safe-whisper-backend:v1.0
    container_name: safe-whisper-backend-prod
    environment:
      # Database connection
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${DB_NAME:-safe_whisper}
      DB_USERNAME: ${DB_USER:-safe_user}
      DB_PASSWORD: ${DB_PASSWORD}
      
      # JPA/Hibernate settings
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: false
      
      # Server settings
      SERVER_PORT: 8080
      
      # Security settings (enable SSL in production)
      SPRING_SECURITY_REQUIRE_SSL: ${REQUIRE_SSL:-false}
      
      # CORS settings (update for production)
      APP_SECURITY_CORS_ALLOWED_ORIGINS_0: ${CORS_ORIGIN_1:-http://localhost:3000}
      APP_SECURITY_CORS_ALLOWED_ORIGINS_1: ${CORS_ORIGIN_2:-https://localhost:3000}
      
      # Logging
      LOGGING_LEVEL_ROOT: WARN
      LOGGING_LEVEL_COM_EXAMPLE_SECUREMESSAGING: INFO
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - safe-whisper-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

networks:
  safe-whisper-network:
    driver: bridge

volumes:
  postgres_prod_data:
    driver: local
